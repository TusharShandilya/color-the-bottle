{"version":3,"sources":["components/ChoiceList.module.scss","components/ColorHex.module.scss","components/Modal.module.scss","components/ChoiceItem.module.scss","components/CustomButton.module.scss","components/Navbar.module.scss","components/Tooltip.module.scss","components/ChoiceSubmitForm.module.scss","assets/logo.svg","components/ChoiceItem.component.jsx","components/Tooltip.component.jsx","components/ColorHex.component.jsx","components/Modal.component.jsx","components/ChoiceList.component.jsx","components/CustomButton.component.jsx","components/ChoiceSubmitForm.component.jsx","components/Navbar.component.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ChoiceItem","choice","deleteChoice","className","styles","choiceItem","choiceIcon","onClick","icon","faTrashAlt","choiceText","text","Tooltip","children","direction","tooltip","ColorHex","revealChoice","lockChoice","useState","showTooltip","setTooltip","colorHex","style","background","icons","copyIcon","setTimeout","copyText","document","getElementById","select","setSelectionRange","execCommand","faCopy","revealIcon","faEye","deleteIcon","lockIcon","changeAllowed","faLockOpen","faLock","hexValue","value","id","Modal","head","body","footer","toggle","modal","main","ChoiceList","choiceArray","choicesHidden","randomizeChoices","showModal","setShowModal","userChoice","setUserChoice","faTimes","modalBody","choiceHeading","redoIcon","faRedo","choiceList","colorHexList","colorHexReveal","length","colorHexRevealLess","map","CustomButton","type","pop","singleInput","btn","popin","ChoiceSubmitForm","choiceSubmit","updateChoice","onSubmit","e","preventDefault","form","name","autoFocus","onChange","target","colorType","Navbar","theme","setTheme","useEffect","localStorage","getItem","getElementsByTagName","setAttribute","logo","src","alt","setItem","iconDark","faMoon","faSun","App","updateChoiceArray","updateChoicesHidden","randomHexCode","randomColor","Math","random","toString","slice","toUpperCase","console","log","valueObject","choices","filter","array","i","j","floor","shuffleArray","faEyeSlash","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25202259.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"choiceList\":\"ChoiceList_choiceList__1Bo9Z\",\"colorHexList\":\"ChoiceList_colorHexList__2Zlwy\",\"colorHexReveal\":\"ChoiceList_colorHexReveal__GYtN3\",\"colorHexRevealLess\":\"ChoiceList_colorHexRevealLess__3wg4O\",\"modalBody\":\"ChoiceList_modalBody__logYu\",\"icon\":\"ChoiceList_icon__1DHid\",\"choiceHeading\":\"ChoiceList_choiceHeading__24WV9\",\"redoIcon\":\"ChoiceList_redoIcon__3wB5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorHex\":\"ColorHex_colorHex__1Ca0P\",\"icons\":\"ColorHex_icons__7xDfd\",\"deleteIcon\":\"ColorHex_deleteIcon__4097f\",\"copyIcon\":\"ColorHex_copyIcon__1IRPW\",\"revealIcon\":\"ColorHex_revealIcon__1z7Yj\",\"hexValue\":\"ColorHex_hexValue__RkNW1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3ixu-\",\"main\":\"Modal_main__Azu40\",\"head\":\"Modal_head__2txNy\",\"body\":\"Modal_body__2sfbF\",\"footer\":\"Modal_footer__1bzLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choiceItem\":\"ChoiceItem_choiceItem__3itl5\",\"choiceIcon\":\"ChoiceItem_choiceIcon__1hnom\",\"choiceText\":\"ChoiceItem_choiceText__3UrQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"CustomButton_btn__2vr3S\",\"singleInput\":\"CustomButton_singleInput__2yhsr\",\"popin\":\"CustomButton_popin__2-_RQ\",\"pop-in\":\"CustomButton_pop-in__2CYVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Navbar_logo__19oGG\",\"icon\":\"Navbar_icon__31dP7\",\"iconDark\":\"Navbar_iconDark__18xwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__1CbjF\",\"fade-in\":\"Tooltip_fade-in__4lVk-\",\"top\":\"Tooltip_top__2Nuvn\",\"bottom\":\"Tooltip_bottom__3KVMB\",\"left\":\"Tooltip_left__1vOmA\",\"right\":\"Tooltip_right__1rH7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ChoiceSubmitForm_form__3MyyZ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.7a347500.svg\";","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./ChoiceItem.module.scss\";\n\nconst ChoiceItem = ({ choice, deleteChoice }) => {\n  return (\n    <div className={styles.choiceItem}>\n      <span className={styles.choiceIcon} onClick={() => deleteChoice(choice)}>\n        <FontAwesomeIcon icon={faTrashAlt} />\n      </span>\n      <span className={styles.choiceText}>{choice.text}</span>\n    </div>\n  );\n};\n\nexport default ChoiceItem;\n","import React from \"react\";\n\nimport styles from \"./Tooltip.module.scss\";\nimport { useState } from \"react\";\n\nconst Tooltip = ({ children, direction }) => {\n  \n  \n  return (\n    <div className={`${styles.tooltip} ${styles[direction]}`}>{children}</div>\n  );\n};\n\nexport default Tooltip;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faCopy,\n  faEye,\n  faLockOpen,\n  faLock,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./ColorHex.module.scss\";\nimport Tooltip from \"./Tooltip.component\";\n\nconst ColorHex = ({ choice, deleteChoice, revealChoice, lockChoice }) => {\n  const [showTooltip, setTooltip] = useState(false)\n\n  const copyHex = () => {\n    setTooltip(true);\n    setTimeout(() => setTooltip(false), 1000);\n    let copyText = document.getElementById(`hexCodeInput-${choice.colorHex}`);\n\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n    document.execCommand(\"copy\");\n\n  };\n\n  return (\n    <div className={styles.colorHex} style={{ background: choice.colorHex }}>\n      <div className={styles.icons}>\n        <span className={styles.copyIcon} onClick={copyHex}>\n          {showTooltip && <Tooltip direction=\"bottom\">Hex Copied!</Tooltip>}\n          <FontAwesomeIcon icon={faCopy} />\n        </span>\n        <span className={styles.revealIcon} onClick={revealChoice}>\n          <FontAwesomeIcon icon={faEye} />\n        </span>\n        <span className={styles.deleteIcon} onClick={deleteChoice}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </span>\n        <span className={styles.lockIcon} onClick={lockChoice}>\n          <FontAwesomeIcon icon={choice.changeAllowed ? faLockOpen : faLock} />\n        </span>\n      </div>\n      <input\n        className={styles.hexValue}\n        value={choice.colorHex}\n        id={`hexCodeInput-${choice.colorHex}`}\n      />\n    </div>\n  );\n};\n\nexport default ColorHex;\n","import React from \"react\";\n\nimport styles from \"./Modal.module.scss\";\n\nconst Modal = ({ head, body, footer, toggle }) => {\n  return (\n    <div className={styles.modal}>\n      <section className={styles.main}>\n        {head && <div className={styles.head}>{head}</div>}\n        {body && <div className={styles.body}>{body}</div>}\n        {footer && <div className={styles.footer}>{footer}</div>}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Fragment, useState } from \"react\";\n\nimport ChoiceItem from \"./ChoiceItem.component\";\nimport ColorHex from \"./ColorHex.component\";\nimport styles from \"./ChoiceList.module.scss\";\nimport Modal from \"./Modal.component\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faRedo } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ChoiceList = ({\n  choiceArray,\n  deleteChoice,\n  choicesHidden,\n  lockChoice,\n  randomizeChoices,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [userChoice, setUserChoice] = useState(\"\");\n\n  const revealChoice = (choice) => {\n    setShowModal(!showModal);\n    setUserChoice(choice.text);\n  };\n\n  return !choicesHidden ? (\n    <div className={styles.choiceList}>\n      {choiceArray.map((choice) => (\n        <ChoiceItem deleteChoice={deleteChoice} choice={choice} />\n      ))}\n    </div>\n  ) : (\n    <Fragment>\n      {showModal && (\n        <Modal\n          head={\n            <Fragment>\n              You choose...\n              <span\n                className={styles.icon}\n                onClick={() => setShowModal(false)}\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </Fragment>\n          }\n          body={<div className={styles.modalBody}>{userChoice}</div>}\n        />\n      )}\n      <span className={styles.choiceHeading}>\n        <h2>Pick a color!</h2>\n        <span onClick={randomizeChoices} className={styles.redoIcon}>\n          <FontAwesomeIcon icon={faRedo} />\n        </span>\n      </span>\n      <div className={`${styles.choiceList} ${styles.colorHexList}`}>\n        <div\n          className={`${styles.colorHexReveal} ${\n            choiceArray.length <= 3 && styles.colorHexRevealLess\n          }`}\n        >\n          {choiceArray.map((choice) => (\n            <ColorHex\n              choice={choice}\n              revealChoice={() => revealChoice(choice)}\n              deleteChoice={() => deleteChoice(choice)}\n              lockChoice={() => lockChoice(choice)}\n            />\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ChoiceList;\n","import React from \"react\";\n\nimport styles from \"./CustomButton.module.scss\";\n\nconst CustomButton = ({ children, onClick, type, pop, singleInput }) => {\n  return (\n    <button\n      onClick={onClick}\n      type={type}\n      className={`${styles.btn} ${pop && styles.popin} ${singleInput && styles.singleInput}`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React, { useState } from \"react\";\nimport CustomButton from \"./CustomButton.component\";\n\nimport styles from \"./ChoiceSubmitForm.module.scss\";\n\nconst ChoiceSubmitForm = ({ choiceSubmit }) => {\n  const [choice, updateChoice] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (choice) {\n      choiceSubmit(choice);\n      updateChoice(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label>Enter a possible choice here</label>\n      <input\n        type=\"text\"\n        name=\"\"\n        id=\"\"\n        value={choice}\n        autoFocus\n        onChange={(e) => updateChoice(e.target.value)}\n      />\n      <CustomButton singleInput type=\"submit\" colorType=\"primary\">\n        Add Choice\n      </CustomButton>\n    </form>\n  );\n};\n\nexport default ChoiceSubmitForm;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./Navbar.module.scss\";\nimport logo from \"../assets/logo.svg\";\n\nconst Navbar = () => {\n  const [theme, setTheme] = useState(\"light\");\n\n  useEffect(() => {\n    let theme = localStorage.getItem('colorBottleTheme');\n\n    if(theme === 'dark') {\n      setTheme(\"dark\")\n      document.getElementsByTagName('html')[0].setAttribute('theme', 'dark')\n    }\n    \n  }, [])\n\n  const toggleTheme = () => {\n    if(theme==='light') {\n      localStorage.setItem(\"colorBottleTheme\", \"dark\")\n      document.getElementsByTagName('html')[0].setAttribute('theme', 'dark')\n      setTheme(\"dark\")\n    } else {\n      localStorage.setItem(\"colorBottleTheme\", \"light\")\n      document.getElementsByTagName('html')[0].setAttribute('theme', 'light')\n      setTheme(\"light\")\n    }\n    \n    // window.location.reload()\n  }\n\n  return (\n    <nav>\n      <span className={styles.logo}> <img src={logo} alt=\"\"/> Color The Bottle</span>\n      <span onClick={toggleTheme} className={theme === \"light\" ? styles.icon : styles.iconDark}>\n        <FontAwesomeIcon icon={theme === \"light\" ? faMoon : faSun} />{\" \"}\n        <span>{theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}</span>\n      </span>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, Fragment } from \"react\";\n\nimport ChoiceList from \"./components/ChoiceList.component\";\nimport ChoiceSubmitForm from \"./components/ChoiceSubmitForm.component\";\nimport CustomButton from \"./components/CustomButton.component\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar.component\";\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [choiceArray, updateChoiceArray] = useState([]);\n  const [choicesHidden, updateChoicesHidden] = useState(false);\n\n  const randomHexCode = () => {\n    // let randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    let randomColor = '#' + (\"000000\" + Math.random().toString(16).slice(2, 8).toUpperCase()).slice(-6);\n    console.log(randomColor);\n      \n    return randomColor;\n    \n  };\n\n  const choiceSubmit = (text) => {\n    updateChoiceArray([\n      ...choiceArray,\n      {\n        text,\n        colorHex: randomHexCode(),\n        changeAllowed: true,\n      },\n    ]);\n  };\n\n  const randomizeChoices = () => {\n    let array = choiceArray;\n\n    array = array.map((choice) => {\n      if (choice.changeAllowed){\n        return {\n          ...choice,\n          colorHex: randomHexCode(),\n        };\n    } else {\n      return choice;\n    }\n  });\n\n    updateChoiceArray(array);\n  };\n\n  const deleteChoice = (valueObject) => {\n    let choices = choiceArray;\n    choices = choices.filter((choice) => choice !== valueObject);\n    updateChoiceArray(choices);\n\n    !choices.length && updateChoicesHidden(false);\n  };\n\n  const lockChoice = (valueObject) => {\n    let choices = choiceArray;\n    choices = choices.map((choice) => {\n      if (choice === valueObject) {\n        choice.changeAllowed = !choice.changeAllowed;\n      }\n      return choice;\n    });\n    updateChoiceArray(choices);\n  };\n\n  const hideChoices = () => {\n    updateChoiceArray(shuffleArray(choiceArray));\n    updateChoicesHidden(!choicesHidden);\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar />\n      {!choicesHidden && <ChoiceSubmitForm choiceSubmit={choiceSubmit} />}\n      <ChoiceList\n        choiceArray={choiceArray}\n        deleteChoice={deleteChoice}\n        choicesHidden={choicesHidden}\n        lockChoice={lockChoice}\n        randomizeChoices={randomizeChoices}\n      />\n      <div className=\"box\">\n        {choiceArray.length ? (\n          <CustomButton pop onClick={hideChoices}>\n            {choicesHidden ? (\n              <Fragment>\n                <FontAwesomeIcon icon={faEye} /> Show Choices{\" \"}\n              </Fragment>\n            ) : (\n              <Fragment>\n                <FontAwesomeIcon icon={faEyeSlash} />\n                Hide Choices{\" \"}\n              </Fragment>\n            )}\n          </CustomButton>\n        ) : (\n          <p />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}